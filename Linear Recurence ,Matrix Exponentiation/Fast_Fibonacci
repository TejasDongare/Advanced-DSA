#include<iostream>
#include<vector>
#define mod 1000000007
#define ll long long int
using namespace std;
vector<ll> f1;
vector<vector<ll>> mul(vector<vector<ll>> A,vector<vector<ll>> B)
{
	vector<vector<ll>> answer(3,vector<ll>(3));
	for(ll i=1;i<=2;i++)
	{
		for(ll j=1;j<=2;j++)
		{
			answer[i][j]=0;
			for(ll k=1;k<=2;k++)
			{
				answer[i][j]=(answer[i][j]+(A[i][k]*B[k][j])%mod)%mod;
			//	cout<<i<<"=i, j="<<j<<" k="<<k<<" a="<<A[i][k]<<" b="<<B[k][j]<<" " <<answer[i][j]<<endl; 
			}
		}
	}
	return answer;
}
vector<vector<ll>> power(ll n,vector<vector<ll>> v)
{
	if(n==1)
	{
		return v;
	}
	if(n&1)
	{
		return mul(v,(power(n-1,v)));
	}
	vector<vector<ll>> temp=power(n/2,v);
	return mul(temp,temp);
}
ll compute(ll n)
{	
	if(n==1)
	{
		return 0;
	}
	if(n==2)
	{
		return 1;
	}
	//make f1
	f1.push_back(0);
	f1.push_back(1);
	//Transform Matrix
	vector<vector<ll>> Transform(3,vector<ll>(3));
	for(ll i=1;i<=2;i++)
	{
		for(ll j=1;j<=2;j++)
		{
			if(i==2)
			{
				Transform[i][j]=1;
			}
			else
			{
				if(j==i+1)
				{
					Transform[i][j]=1;
				}
				else
				{
					Transform[i][j]=0;
				}
			}
		}
	}
	Transform=power(n-1,Transform);
	//Multiplying Transform and f1
	ll finalanswer=0;
	for(ll i=1;i<=2;i++)
	{
		//cout<<"T="<<Transform[1][i]<<" f1[i]="<<f1[i]<<endl;
		finalanswer=(finalanswer+(Transform[1][i]*f1[i])%mod)%mod;
	}
	return finalanswer;	
}
int main () {
	ll t;
	cin>>t;
	while(t--)
	{
		f1.push_back(0);//We are pushing Random Variable as we are doing indexing from 1
		ll n;
		cin>>n;
		cout<<compute(n+1)<<endl;//n+1 because we have made ours code for 1 based indexing and we are getting input from 0 based indexing thats y
		f1.clear();
	}
	return 0;
}